version: '3.8'
services:
# php application service
  application:
     container_name: php-apache
    #  image: php:8.2-apache 
     build:
       context: ./src
       dockerfile: Dockerfile
     env_file:
       - .env
     depends_on:
       - database
     volumes:
       - ./src:/var/www/html/
     ports:
       - 80:80
     networks:
       - php-app-network


# mysql db service
  database:
    container_name: mysql-database
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - 3306:3306
    volumes:
      - dbdata:/var/lib/mysql
      - ./db:/docker-entrypoint-initdb.d
    networks:
      - php-app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "database"]
      interval: 20s
      timeout: 10s
      retries: 10

 # web interface service for my db 
  phpmyadmin:
    container_name: web-interface
    image: phpmyadmin:latest
    depends_on:
      - database
    restart: always
    environment:
# PMA_HOST is the IP or domain of the MySQL server
      PMA_HOST: database
    ports:
      - 8081:80
    networks:
      - php-app-network

  # mysqld_exporter:
  #     container_name: mysqld_exporter
  #     image: prom/mysqld-exporter
  #     environment:
  #       DATA_SOURCE_NAME: "${MYSQL_USER}:${MYSQL_PASSWORD}@tcp(database:3306)/${MYSQL_DATABASE}"
  #     command: 
  #       - "--collect.global_status"
  #       - "--collect.info_schema.innodb_metrics"
  #       - "--collect.auto_increment.columns"
  #       - "--collect.info_schema.processlist"
  #       - "--collect.binlog_size"
  #       - "--collect.info_schema.tablestats"
  #       - "--collect.global_variables"
  #       - "--collect.info_schema.query_response_time"
  #       - "--collect.info_schema.userstats"
  #       - "--collect.info_schema.tables"
  #       - "--collect.perf_schema.tablelocks"
  #       - "--collect.perf_schema.file_events"
  #       - "--collect.perf_schema.eventswaits"
  #       - "--collect.perf_schema.indexiowaits"
  #       - "--collect.perf_schema.tableiowaits"
  #     ports:
  #       - 9104:9104
  #     depends_on:
  #       - database
  #     volumes:
  #       - ./.my.cnf:/.my.cnf
  #     networks:
  #       - php-app-network

  prometheus:
    container_name: prom-monitor
    image: prom/prometheus
    volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml
        - prometheus_data:/prometheus
    command:
        - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090 
    networks:
      - php-app-network

#  provides hardware and OS metrics
  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter
    ports:
      - 9100:9100
    networks:
      - php-app-network

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - php-app-network

  grafana:
    container_name: grafana
    image: grafana/grafana
    # environment:
    #   GF_SECURITY_ADMIN_PASSWORD: pass
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - php-app-network


volumes:
  dbdata:
  prometheus_data: {}
  grafana_data: {}
networks:
  php-app-network:



  