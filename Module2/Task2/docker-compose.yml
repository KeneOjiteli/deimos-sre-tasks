version: '3.8'
services:
# php application service
  application:
     container_name: php-apache
    #  image: php:8.2-apache 
     build:
       context: ./src
       dockerfile: Dockerfile
     env_file:
       - .env
     depends_on:
       - database
     volumes:
       - ./src:/var/www/html/
     ports:
       - 8080:80
     networks:
       - php-app-network


# mysql db service
  database:
    container_name: mysql-database
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - 3306:3306
    volumes:
      - dbdata:/var/lib/mysql
      - ./db:/docker-entrypoint-initdb.d

    networks:
      - php-app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "database"]
      interval: 20s
      timeout: 10s
      retries: 10

 # web interface service for my db 
  phpmyadmin:
    container_name: web-interface
    image: phpmyadmin:latest
    depends_on:
      - database
    restart: always
    environment:
# PMA_HOST is the IP or domain of the MySQL server
      PMA_HOST: database
    ports:
      - 8081:80
    networks:
      - php-app-network

  monitor:
    container_name: prom-monitor
    image: prom/prometheus:latest
    volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml
        - prometheus_data:/prometheus
    command:
        - '-config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090 
    networks:
      - php-app-network

  node-exporter:
    container_name: exporter
    image: prom/node-exporter:0.12.0rc1
    ports:
      - 9100:9100
    networks:
      - php-app-network

  grafana:
    image: grafana/grafana:3.0.0-beta7
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=pass
    depends_on:
      - monitor
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - php-app-network

volumes:
  dbdata:
  prometheus_data: {}
  grafana_data: {}
networks:
  php-app-network:



  